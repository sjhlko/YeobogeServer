plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.yeoboge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    runtimeOnly 'com.mysql:mysql-connector-j'

    // JWT 관련 의존성
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring boot 기본 의존성
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // 데이터베이스 및 스토리지 관련 의존성
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // Swagger 의존성
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2+'

    // JUnit 테스트 관련 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

    //smtp 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //s3 버킷 관련 의존성
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // log 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    //xml 파싱 관련 의존성
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'

    // WebFlux 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Web Socket 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation "org.springframework.security:spring-security-messaging"

    // fcm 관련 의존성
    implementation 'com.google.firebase:firebase-admin:9.1.1'

}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main {
        java {
            srcDirs += [ querydslDir ]
        }
    }
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

clean {
    delete file(querydslDir)
}
